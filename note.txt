dashboard
user

cod
nickname
password
name
position
dni
mail


INSERT INTO `user` 
(`cod`, `nickname`, `password`, `name`, `position`, `dni`, `mail`, `date`)
 VALUES ('1', 'admin', 'admin', 'Amin Juan RamÃ­rez Coas', 'Administracion',
  '12345678', 'admin@gmail.com', current_timestamp());


INSERT INTO `note` (`cod_note`, `cod_user`, `title`, `description`, 
`img_url`, `date`) VALUES ('1', '1', 'learning programming ', 
'Angular\r\nReact JS\r\nPHP\r\nJava', 
'https://media.geeksforgeeks.org/wp-content/cdn-uploads/20190626123927/untitlsssssed.png'
, current_timestamp());


//!REGISTRATION
    public async registration(req:any,res:Response){
        const pass = req.body.password;
        //(valor, numeros de saltos)
        let passEncrypts = await bcrypt.hash(pass, 8 );
        
        res.json({ text: passEncrypts });
        
        let hash = '$2b$08$hvVabadzj4dl03ASNXXKN.8dVYLmDnjtCWr/3nEjeqGDxieTOY7yK';
        let compare = bcrypt.compareSync('nuevo',hash);
        if(compare){
            console.log('Correcto');
        }
        else{
            console.log('incorrecto');
        }
    }


"build": "tsc -w",
"dev": "nodemon build/index.js"


 public async updateUser(req:any,res:Response){

        jwt.verify(req.token, 'keyCodeToken', async (err: any, authData: any)=>{
            if(err){
                res.sendStatus(403);
            }
            else{
                //res.json(authData);
                let nick  = req.body.nickname;
                pool.query('SELECT * FROM user WHERE nickname = ? ', nick, async function (err, result, fields) {
                    if (err) {
                        throw err;
                    }
                    if ( (result.length > 0) && (authData.user[0].cod != result[0].cod) ) {

                        res.json( { message:"registered nickname"} );
                    }
                    else {
                        let dni = req.body.dni;
                        pool.query('SELECT * FROM user WHERE dni = ? ', dni, async function (err, result, fields) {
                            if (err) {
                                throw err;
                            }
                            if ( (result.length > 0) && (authData.user[0].cod != result[0].cod)) {
                                res.json( { message:"registered DNI" } );
                            }
                            else {

                                let mail = req.body.mail;
                                pool.query('SELECT * FROM user WHERE mail = ? ', mail, async function (err, result, fields) {
                                    if (err) {
                                        throw err;
                                    }
                                    if ( (result.length > 0) && (authData.user[0].cod != result[0].cod)) {
                                        res.json( { message:"registered mail" } );
                                    }
                                    else {

                                        //let passEncrypts = await bcrypt.hash( req.body.password , 8 );
                                        //req.body.password = passEncrypts;

                                        pool.query('UPDATE user set ? WHERE cod = ?',
                                            [req.body, authData.user[0].cod] , function(err, result){
                                                if(err){
                                                    throw err;
                                                }//Columnas afectadas
                                                if(result.affectedRows>0){
                                                    res.json({ message:"the user was modified ",
                                                    colAfect: result.affectedRows });
                                                }
                                                else{
                                                    res.json({ message:"not modified - col unaffected"});
                                                }
                                            } 
                                        );
                                    }
                                });
                            }
                        });
                    }
                });
            }
        });
    }